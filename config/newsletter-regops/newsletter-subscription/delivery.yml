apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: newsletter-subscription
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
    kapp.k14s.io/change-rule: upsert after upserting servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: newsletter
    apps.tanzu.vmware.com/workload-type: web
    app.kubernetes.io/component: run
    carto.run/workload-name: newsletter-subscription
spec:
  template:
    metadata:
      annotations:
        apps.tanzu.vmware.com/correlationid: https://github.com/sdubois-tapdemo/newsletter?sub_path=newsletter-subscription
        boot.spring.io/version: 3.2.0
        conventions.carto.run/applied-conventions: |-
          appliveview-sample/app-live-view-appflavour-check
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
          spring-boot-convention/service-intent-postgres
        developer.conventions/target-containers: workload
        kubectl.kubernetes.io/last-applied-configuration: |
          {"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"annotations":{},"labels":{"app.kubernetes.io/part-of":"newsletter","apps.tanzu.vmware.com/workload-type":"web"},"name":"newsletter-subscription","namespace":"newsletter-regops"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"20"}]},"params":[{"name":"gitops_ssh_secret","value":"github-ssh-secret"},{"name":"gitops_server_address","value":"https://github.com/"},{"name":"gitops_repository_owner","value":"sdubois-tapdemo"},{"name":"gitops_repository_name","value":"cartographer"}],"serviceClaims":[{"name":"db","ref":{"apiVersion":"services.apps.tanzu.vmware.com/v1alpha1","kind":"ClassClaim","name":"newsletter-db"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/sdubois-tapdemo/newsletter"},"subPath":"newsletter-subscription"}}}
        services.conventions.carto.run/postgres: postgresql/42.6.0
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: newsletter
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: newsletter-subscription
        conventions.carto.run/framework: spring-boot
        services.conventions.carto.run/postgres: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: newsletter-subscription
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: harbor.apps.tap.tanzudemohub.com/tap-supply-chain-basic/newsletter-subscription-newsletter-regops@sha256:da5b0a5447ce5632d488d5a7dbdf3d2b79e330789210991da241608ccf92a028
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
      serviceAccountName: default

